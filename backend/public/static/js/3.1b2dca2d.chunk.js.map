{"version":3,"sources":["components/Avatar/AvatarForm.module.css","components/Header/MainHeader.module.css","components/Todo/TodoItem.module.css","components/Actions/DoneTask.module.css","components/Actions/SortForm.module.css","components/Todo/EmptyList.module.css","components/Todo/TodoList.module.css","assets/plus-sign.svg","components/Actions/NewTask.js","assets/avatars/Avatar-1.svg","assets/avatars/Avatar-2.svg","assets/avatars/Avatar-3.svg","assets/avatars/Avatar-4.svg","assets/avatars/Avatar-5.svg","assets/avatars/Avatar-6.svg","assets/avatars/Avatar-7.svg","assets/avatars/Avatar-8.svg","components/Avatar/AvatarForm.js","components/Header/MainHeader.js","components/Avatar/svg.js","components/Actions/EditTask.js","components/Todo/TodoItem.js","components/Actions/DoneTask.js","components/Actions/SortForm.js","assets/empty-list.svg","components/Todo/EmptyList.js","components/Todo/TodoList.js","pages/MainPage.js"],"names":["module","exports","NewTask","useDisclosure","isOpen","onOpen","onClose","useState","title","setTitle","priority","setPriority","authCTX","useContext","AuthContext","useFetch","isLoading","sendRequest","initialRef","useRef","finalRef","event","a","preventDefault","process","JSON","stringify","creatorId","userState","userId","response","setTasks","setList","task","console","log","onClick","bg","w","padding","src","plusSign","alt","initialFocusRef","finalFocusRef","closeOnOverlayClick","isCentered","maxWidth","onSubmit","pb","onChange","target","value","placeholder","variant","focus","marginBottom","ref","colorScheme","mr","type","loadingText","AvatarForm","avatarInput","setAvatarInput","avatarHandler","avatar","responseData","setAvatar","justifyContent","fontWeight","borderRadius","paddingBottom","display","className","styles","checkBox","flexWrap","id","name","checked","htmlFor","image1","size","image2","image3","image4","image5","image6","image7","image8","MainHeader","useEffect","index","masalan","Avatar_1","Avatar_2","Avatar_3","Avatar_4","Avatar_5","Avatar_6","Avatar_7","Avatar_8","header","action","isActive","as","Button","minWidth","minHeight","fontSize","_hover","_active","_focus","boxShadow","userName","width","logout","newTask","EditTask","props","oldTitle","oldPriority","taskId","TodoItem","proClass","stringDate","Date","date","toLocaleString","month","day","deleteHandler","checkDoneHandler","main","checkbox","paddingLeft","DoneTask","fetch","method","headers","json","ok","Error","message","opacity","defaultIsChecked","isDisabled","SortForm","useReducer","state","list","reverse","ascending","sort","b","createDate","order","indexOf","sortState","dispatch","listSorter","textAlign","EmptyList","container","emptyList_pic","description","TodoList","toggle","setToggle","length","filter","status","map","todo","_id","container2","MainPage","error","clearError","tasks","fetchTasks","user","maxW","centerContent","ErrorModal"],"mappings":"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","file":"static/js/3.1b2dca2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBox\":\"AvatarForm_checkBox__21wFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__3bLcg\",\"title\":\"MainHeader_title__10NQ4\",\"action\":\"MainHeader_action__2hDMu\",\"newTask\":\"MainHeader_newTask__2Ax5K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TodoItem_main__3qZPS\",\"action\":\"TodoItem_action__2_NZS\",\"title\":\"TodoItem_title__3pbMf\",\"priority\":\"TodoItem_priority__1M4HG\",\"high\":\"TodoItem_high__1VDOE\",\"medium\":\"TodoItem_medium__3wGd5\",\"low\":\"TodoItem_low__35E5L\",\"checkbox\":\"TodoItem_checkbox__EA4Fx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DoneTask_main__NmxZX\",\"action\":\"DoneTask_action__1RokK\",\"title\":\"DoneTask_title__21Zuh\",\"priority\":\"DoneTask_priority__X3Q4a\",\"checkbox\":\"DoneTask_checkbox__1q2PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sort\":\"SortForm_sort__1XrYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EmptyList_container__1QyRF\",\"description\":\"EmptyList_description__fBV9c\",\"action\":\"EmptyList_action__37f-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TodoList_container__3_I-8\",\"container2\":\"TodoList_container2__3KobT\",\"list\":\"TodoList_list__1iuwu\"};","export default __webpack_public_path__ + \"static/media/plus-sign.57646aa8.svg\";","import { useRef, useState, useContext } from \"react\";\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  FormControl,\n  Input,\n  Select,\n} from \"@chakra-ui/react\";\n\nimport plusSign from \"../../assets/plus-sign.svg\";\nimport { AuthContext } from \"../../util/context/auth-context\";\nimport { useFetch } from \"../../util/Hooks/useFetch\";\n\nfunction NewTask() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [title, setTitle] = useState(\"\");\n  const [priority, setPriority] = useState();\n  const authCTX = useContext(AuthContext);\n\n  const { isLoading, sendRequest } = useFetch();\n\n  const initialRef = useRef();\n  const finalRef = useRef();\n\n  function inputHandler(event) {\n    setTitle(event.target.value);\n  }\n  function priorityHandler(event) {\n    setPriority(event.target.value);\n  }\n\n  async function onSubmitHandler(event) {\n    event.preventDefault();\n\n    try {\n      const response = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/tasks\",\n        \"POST\",\n        JSON.stringify({\n          title,\n          priority,\n          creatorId: authCTX.userState.userId,\n        })\n      );\n      authCTX.setTasks(1);\n      authCTX.setList(response.task);\n\n      onClose();\n      setTitle(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={onOpen} bg=\"rgba(104, 211, 145, 1)\" w=\"32px\" padding=\"0\">\n        <img src={plusSign} alt=\"\" />\n      </Button>\n\n      <Modal\n        initialFocusRef={initialRef}\n        finalFocusRef={finalRef}\n        isOpen={isOpen}\n        onClose={onClose}\n        closeOnOverlayClick={false}\n        isCentered\n      >\n        <ModalOverlay />\n        <ModalContent maxWidth=\"350px\">\n          <form onSubmit={onSubmitHandler}>\n            <ModalHeader>Add a new task</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody pb={6}>\n              <FormControl>\n                <Input\n                  onChange={inputHandler}\n                  placeholder=\"Title\"\n                  variant=\"filled\"\n                  focus=\"none\"\n                  marginBottom=\"0.5rem\"\n                  value={title}\n                  ref={initialRef}\n                />\n                <Select placeholder=\"Priority\" onChange={priorityHandler}>\n                  <option value=\"High\">High</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"Low\">Low</option>\n                </Select>\n              </FormControl>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                colorScheme=\"green\"\n                mr={3}\n                type=\"submit\"\n                isLoading={isLoading}\n                loadingText=\"Saving\"\n              >\n                Save\n              </Button>\n              <Button onClick={onClose}>Cancel</Button>\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default NewTask;\n","export default __webpack_public_path__ + \"static/media/Avatar-1.38ba59e8.svg\";","export default __webpack_public_path__ + \"static/media/Avatar-2.36409028.svg\";","export default __webpack_public_path__ + \"static/media/Avatar-3.11ccdaae.svg\";","export default __webpack_public_path__ + \"static/media/Avatar-4.87704412.svg\";","export default __webpack_public_path__ + \"static/media/Avatar-5.1164945c.svg\";","export default __webpack_public_path__ + \"static/media/Avatar-6.532064cd.svg\";","export default __webpack_public_path__ + \"static/media/Avatar-7.cc6b73f8.svg\";","export default __webpack_public_path__ + \"static/media/Avatar-8.78af1ad1.svg\";","import { useRef, useState, useContext } from \"react\";\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  FormControl,\n  Avatar,\n} from \"@chakra-ui/react\";\n\nimport { useFetch } from \"../../util/Hooks/useFetch\";\nimport { AuthContext } from \"../../util/context/auth-context\";\nimport image1 from \"../../assets/avatars/Avatar-1.svg\";\nimport image2 from \"../../assets/avatars/Avatar-2.svg\";\nimport image3 from \"../../assets/avatars/Avatar-3.svg\";\nimport image4 from \"../../assets/avatars/Avatar-4.svg\";\nimport image5 from \"../../assets/avatars/Avatar-5.svg\";\nimport image6 from \"../../assets/avatars/Avatar-6.svg\";\nimport image7 from \"../../assets/avatars/Avatar-7.svg\";\nimport image8 from \"../../assets/avatars/Avatar-8.svg\";\n\nimport styles from \"./AvatarForm.module.css\";\n\nfunction AvatarForm() {\n  const [avatarInput, setAvatarInput] = useState(\"avatar-1\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { isLoading, sendRequest } = useFetch();\n  const authCTX = useContext(AuthContext);\n\n  const initialRef = useRef();\n  const finalRef = useRef();\n\n  function avatarHandler(event) {\n    setAvatarInput(event.target.value);\n  }\n\n  async function onSubmitHandler(event) {\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL +\n          `/users/${authCTX.userState.userId}`,\n        \"PATCH\",\n        JSON.stringify({\n          avatar: avatarInput,\n        })\n      );\n      authCTX.setAvatar(responseData.avatar);\n      onClose();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <>\n      <Button\n        onClick={onOpen}\n        w=\"100%\"\n        justifyContent=\"flex-start\"\n        fontWeight=\"400\"\n        bg=\"inherit\"\n        borderRadius=\"0\"\n      >\n        Select Avatar\n      </Button>\n\n      <Modal\n        initialFocusRef={initialRef}\n        finalFocusRef={finalRef}\n        isOpen={isOpen}\n        onClose={onClose}\n        closeOnOverlayClick={false}\n        isCentered\n\n        // isCentered\n      >\n        <ModalOverlay />\n        <ModalContent maxWidth=\"350px\">\n          <form onSubmit={onSubmitHandler}>\n            <ModalHeader paddingBottom=\"8px\">Pick an avatar</ModalHeader>\n            <ModalCloseButton />\n\n            <ModalBody display=\"flex\" justifyContent=\"center\" pb={6}>\n              <FormControl\n                className={styles.checkBox}\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexWrap=\"wrap\"\n                maxWidth=\"300px\"\n              >\n                <input\n                  type=\"radio\"\n                  id=\"avatar-1\"\n                  name=\"avatar\"\n                  value=\"0\"\n                  checked={avatarInput === \"0\"}\n                  onChange={avatarHandler}\n                  ref={initialRef}\n                />\n                <label htmlFor=\"avatar-1\">\n                  <Avatar name=\"avatar-1\" src={image1} size=\"md\" />\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"avatar-2\"\n                  name=\"avatar\"\n                  value=\"1\"\n                  checked={avatarInput === \"1\"}\n                  onChange={avatarHandler}\n                />\n                <label htmlFor=\"avatar-2\">\n                  <Avatar name=\"avatar-2\" src={image2} size=\"md\" />\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"avatar-3\"\n                  name=\"avatar\"\n                  value=\"2\"\n                  checked={avatarInput === \"2\"}\n                  onChange={avatarHandler}\n                />\n                <label htmlFor=\"avatar-3\">\n                  <Avatar name=\"avatar-3\" src={image3} size=\"md\" />\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"avatar-4\"\n                  name=\"avatar\"\n                  value=\"3\"\n                  checked={avatarInput === \"3\"}\n                  onChange={avatarHandler}\n                />\n                <label htmlFor=\"avatar-4\">\n                  <Avatar name=\"avatar-4\" src={image4} size=\"md\" />\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"avatar-5\"\n                  name=\"avatar\"\n                  value=\"4\"\n                  checked={avatarInput === \"4\"}\n                  onChange={avatarHandler}\n                />\n                <label htmlFor=\"avatar-5\">\n                  <Avatar name=\"avatar-5\" src={image5} size=\"md\" />\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"avatar-6\"\n                  name=\"avatar\"\n                  value=\"5\"\n                  checked={avatarInput === \"5\"}\n                  onChange={avatarHandler}\n                />\n                <label htmlFor=\"avatar-6\">\n                  <Avatar name=\"avatar-6\" src={image6} size=\"md\" />\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"avatar-7\"\n                  name=\"avatar\"\n                  value=\"6\"\n                  checked={avatarInput === \"6\"}\n                  onChange={avatarHandler}\n                />\n                <label htmlFor=\"avatar-7\">\n                  <Avatar name=\"avatar-7\" src={image7} size=\"md\" />\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"avatar-8\"\n                  name=\"avatar\"\n                  value=\"7\"\n                  checked={avatarInput === \"7\"}\n                  onChange={avatarHandler}\n                />\n                <label htmlFor=\"avatar-8\">\n                  <Avatar name=\"avatar-8\" src={image8} size=\"md\" />\n                </label>\n              </FormControl>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"green\"\n                mr={3}\n                type=\"submit\"\n                isLoading={isLoading}\n                loadingText=\"Saving\"\n              >\n                Save\n              </Button>\n              <Button onClick={onClose}>Cancel</Button>\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default AvatarForm;\n","import { useContext, useState, useEffect } from \"react\";\nimport { Menu, MenuButton, MenuList, Button, Avatar } from \"@chakra-ui/react\";\n\nimport NewTask from \"../Actions/NewTask\";\nimport AvatarForm from \"../Avatar/AvatarForm\";\nimport { AuthContext } from \"../../util/context/auth-context\";\nimport { svg } from \"../Avatar/svg\";\n\nimport styles from \"./MainHeader.module.css\";\n\nfunction MainHeader() {\n  const [avatar, setAvatar] = useState(null);\n  const authCTX = useContext(AuthContext);\n\n  useEffect(() => {\n    const masalan = svg(authCTX.userState.avatar);\n    setAvatar(masalan);\n  }, [authCTX.userState.avatar]);\n\n  return (\n    <header className={styles.header}>\n      <div className={styles.action}>\n        <Menu>\n          {({ isOpen }) => (\n            <>\n              <MenuButton\n                isActive={isOpen}\n                as={Button}\n                bg=\"inherit\"\n                minWidth=\"56px\"\n                minHeight=\"60px\"\n                fontSize=\"20px\"\n                padding=\"0\"\n                _hover={{ bg: \"none\" }}\n                _active={{ bg: \"none\" }}\n                _focus={{ boxShadow: \"none\" }}\n              >\n                <Avatar\n                  name={authCTX.userState.userName}\n                  src={avatar}\n                  size=\"lg\"\n                />\n              </MenuButton>\n              <MenuList>\n                <AvatarForm />\n                <Button\n                  focus=\"none\"\n                  width=\"100%\"\n                  justifyContent=\"flex-start\"\n                  onClick={authCTX.logout}\n                  _active={{ bg: \"none\" }}\n                  _focus={{ boxShadow: \"none\" }}\n                  bg=\"inherit\"\n                  borderRadius=\"0\"\n                >\n                  Logout\n                </Button>\n              </MenuList>\n            </>\n          )}\n        </Menu>\n        <div className={styles.newTask}>\n          <NewTask />\n        </div>\n      </div>\n      <div className={styles.title}>\n        <h1>{`${authCTX.userState.userName}'s list`}</h1>\n        <p>A goal without a plan is just a wish!</p>\n      </div>\n    </header>\n  );\n}\n\nexport default MainHeader;\n","import Avatar_1 from \"../../assets/avatars/Avatar-1.svg\";\nimport Avatar_2 from \"../../assets/avatars/Avatar-2.svg\";\nimport Avatar_3 from \"../../assets/avatars/Avatar-3.svg\";\nimport Avatar_4 from \"../../assets/avatars/Avatar-4.svg\";\nimport Avatar_5 from \"../../assets/avatars/Avatar-5.svg\";\nimport Avatar_6 from \"../../assets/avatars/Avatar-6.svg\";\nimport Avatar_7 from \"../../assets/avatars/Avatar-7.svg\";\nimport Avatar_8 from \"../../assets/avatars/Avatar-8.svg\";\n\nexport function svg(index) {\n  const avatarsSVG = [\n    Avatar_1,\n    Avatar_2,\n    Avatar_3,\n    Avatar_4,\n    Avatar_5,\n    Avatar_6,\n    Avatar_7,\n    Avatar_8,\n  ];\n\n  const avatar = avatarsSVG[index];\n  return avatar;\n}\n","import { useRef, useState, useEffect, useContext } from \"react\";\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  FormControl,\n  Input,\n  Select,\n} from \"@chakra-ui/react\";\n\nimport { useFetch } from \"../../util/Hooks/useFetch\";\nimport { AuthContext } from \"../../util/context/auth-context\";\n\nfunction EditTask(props) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [title, setTitle] = useState(\"\");\n  const [priority, setPriority] = useState();\n  const { isLoading, sendRequest } = useFetch();\n  const authCTX = useContext(AuthContext);\n\n  const initialRef = useRef();\n  const finalRef = useRef();\n  const { title: oldTitle, priority: oldPriority } = props;\n  useEffect(() => {\n    setTitle(oldTitle);\n    setPriority(oldPriority);\n  }, [oldTitle, oldPriority]);\n\n  function inputHandler(event) {\n    setTitle(event.target.value);\n  }\n  function priorityHandler(event) {\n    setPriority(event.target.value);\n  }\n\n  async function onSubmitHandler(event) {\n    event.preventDefault();\n\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/tasks/${props.taskId}`,\n        \"PATCH\",\n        JSON.stringify({\n          title,\n          priority,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n    }\n\n    authCTX.setTasks(0.0001);\n    onClose();\n  }\n\n  return (\n    <>\n      <Button\n        onClick={onOpen}\n        w=\"100%\"\n        justifyContent=\"flex-start\"\n        fontWeight=\"400\"\n        bg=\"inherit\"\n        borderRadius=\"0\"\n      >\n        Edit...\n      </Button>\n\n      <Modal\n        initialFocusRef={initialRef}\n        finalFocusRef={finalRef}\n        isOpen={isOpen}\n        onClose={onClose}\n        closeOnOverlayClick={false}\n        isCentered\n\n        // isCentered\n      >\n        <ModalOverlay />\n        <ModalContent maxWidth=\"350px\">\n          <form onSubmit={onSubmitHandler}>\n            <ModalHeader>Edit item</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody pb={6}>\n              <FormControl>\n                <Input\n                  onChange={inputHandler}\n                  ref={initialRef}\n                  placeholder=\"Title\"\n                  variant=\"filled\"\n                  focus=\"none\"\n                  value={title}\n                  marginBottom=\"0.5rem\"\n                />\n\n                <Select\n                  placeholder=\"Priority\"\n                  onChange={priorityHandler}\n                  value={priority}\n                >\n                  <option value=\"High\">High</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"Low\">Low</option>\n                </Select>\n              </FormControl>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"green\"\n                mr={3}\n                type=\"submit\"\n                isLoading={isLoading}\n                loadingText=\"Saving\"\n              >\n                Save\n              </Button>\n              <Button onClick={onClose}>Cancel</Button>\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default EditTask;\n","import { useContext } from \"react\";\n\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  Tr,\n  Td,\n  Button,\n  Checkbox,\n} from \"@chakra-ui/react\";\n\nimport EditTask from \"../Actions/EditTask\";\nimport { AuthContext } from \"../../util/context/auth-context\";\nimport { useFetch } from \"../../util/Hooks/useFetch\";\n\nimport styles from \"./TodoItem.module.css\";\n\nfunction TodoItem(props) {\n  const authCTX = useContext(AuthContext);\n  const { isLoading, sendRequest } = useFetch();\n  const stringDate = new Date(props.date).toLocaleString(\"en-US\", {\n    month: \"short\",\n    day: \"numeric\",\n  });\n\n  async function deleteHandler() {\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/tasks/${props.id}`,\n        \"DELETE\"\n      );\n\n      authCTX.setTasks(-1);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function checkDoneHandler() {\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/tasks/done/${props.id}`,\n        \"PATCH\"\n      );\n\n      authCTX.setTasks(-1);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  let proClass;\n  if (props.priority === \"High\") {\n    proClass = \"high\";\n  }\n  if (props.priority === \"Medium\") {\n    proClass = \"medium\";\n  }\n  if (props.priority === \"Low\") {\n    proClass = \"low\";\n  }\n\n  return (\n    <Tr className={styles.main} maxWidth=\"375px\">\n      <Td padding=\"8px\">\n        <form className={styles.checkbox} onSubmit={checkDoneHandler}>\n          <Checkbox\n            onChange={checkDoneHandler}\n            colorScheme=\"green\"\n            className={styles.checkbox}\n            size=\"lg\"\n          ></Checkbox>\n        </form>\n      </Td>\n      <Td padding=\"16px\" minWidth=\"170px\" paddingLeft=\"22px\">\n        <div className={styles.title}>{props.title}</div>\n        <div className={styles.date}>{stringDate}</div>\n      </Td>\n      <Td padding=\"13px\">\n        <div className={`${styles.priority}  ${styles[proClass]}`}>\n          {props.priority}\n        </div>\n      </Td>\n      <Td padding=\"20px\">\n        <div className={styles.action}>\n          <Menu>\n            {({ isOpen }) => (\n              <>\n                <MenuButton\n                  isActive={isOpen}\n                  as={Button}\n                  bg=\"inherit\"\n                  _hover={{ bg: \"none\" }}\n                  _focus={{ boxShadow: \"none\" }}\n                  fontSize=\"20px\"\n                >\n                  {isOpen ? \"...\" : \"...\"}\n                </MenuButton>\n                <MenuList>\n                  <EditTask\n                    taskId={props.id}\n                    title={props.title}\n                    priority={props.priority}\n                  />\n                  <Button\n                    focus=\"none\"\n                    width=\"100%\"\n                    justifyContent=\"flex-start\"\n                    _active={{ bg: \"none\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                    bg=\"inherit\"\n                    borderRadius=\"0\"\n                    onClick={deleteHandler}\n                    isLoading={isLoading}\n                    loadingText=\"Deleting\"\n                  >\n                    Delete\n                  </Button>\n                </MenuList>\n              </>\n            )}\n          </Menu>\n        </div>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default TodoItem;\n","import { useContext } from \"react\";\n\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  Tr,\n  Td,\n  Button,\n  Checkbox,\n} from \"@chakra-ui/react\";\n\nimport { AuthContext } from \"../../util/context/auth-context\";\n\nimport styles from \"./DoneTask.module.css\";\n\nfunction DoneTask(props) {\n  const authCTX = useContext(AuthContext);\n  const stringDate = new Date(props.date).toLocaleString(\"en-US\", {\n    month: \"short\",\n    day: \"numeric\",\n  });\n\n  function deleteHandler() {\n    const sendRequest = async () => {\n      try {\n        const response = await fetch(\n          process.env.REACT_APP_BACKEND_URL + `/tasks/${props.id}`,\n          {\n            method: \"DELETE\",\n            headers: { \"Content-Type\": \"application/json\" },\n          }\n        );\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        authCTX.setTasks(-1);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    sendRequest();\n  }\n\n  return (\n    <Tr className={styles.main} maxWidth=\"375px\" bg=\"grey\" opacity=\"90%\">\n      <Td padding=\"8px\">\n        <form className={styles.checkbox}>\n          <Checkbox\n            colorScheme=\"green\"\n            className={styles.checkbox}\n            size=\"lg\"\n            defaultIsChecked\n            isDisabled\n          />\n        </form>\n      </Td>\n      <Td padding=\"16px\" minWidth=\"170px\" paddingLeft=\"22px\">\n        <div className={styles.title}>{props.title}</div>\n        <div className={styles.date}>{stringDate}</div>\n      </Td>\n      <Td padding=\"13px\">\n        <div className={styles.priority}>{props.priority}</div>\n      </Td>\n      <Td padding=\"20px\">\n        <div className={styles.action}>\n          <Menu>\n            {({ isOpen }) => (\n              <>\n                <MenuButton\n                  isActive={isOpen}\n                  as={Button}\n                  bg=\"inherit\"\n                  _hover={{ bg: \"none\" }}\n                  _focus={{ boxShadow: \"none\" }}\n                  fontSize=\"20px\"\n                >\n                  {isOpen ? \"...\" : \"...\"}\n                </MenuButton>\n                <MenuList>\n                  <Button\n                    focus=\"none\"\n                    width=\"100%\"\n                    justifyContent=\"flex-start\"\n                    _active={{ bg: \"none\" }}\n                    _focus={{ boxShadow: \"none\" }}\n                    bg=\"inherit\"\n                    borderRadius=\"0\"\n                    onClick={deleteHandler}\n                  >\n                    Delete\n                  </Button>\n                </MenuList>\n              </>\n            )}\n          </Menu>\n        </div>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default DoneTask;\n","import { useReducer, useContext } from \"react\";\nimport { Tr, Th, Button } from \"@chakra-ui/react\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@chakra-ui/icons\";\n\nimport { AuthContext } from \"../../util/context/auth-context\";\n\nimport styles from \"./SortForm.module.css\";\n\nfunction SortForm(props) {\n  const authCTX = useContext(AuthContext);\n  const [sortState, dispatch] = useReducer(sortReducer, {\n    type: \"task\",\n    ascending: true,\n  });\n\n  function sortReducer(state, action) {\n    switch (action.type) {\n      case \"TASK\":\n        if (state.type === \"task\") {\n          authCTX.userState.list.reverse();\n          return {\n            ...state,\n            ascending: !state.ascending,\n          };\n        } else {\n          authCTX.userState.list.sort(\n            (a, b) => new Date(b.createDate) - new Date(a.createDate)\n          );\n          return {\n            ...state,\n            type: \"task\",\n            ascending: !state.ascending,\n          };\n        }\n      case \"PRIORITY\":\n        if (state.type === \"priority\") {\n          authCTX.userState.list.reverse();\n          return {\n            ...state,\n            ascending: !state.ascending,\n          };\n        } else {\n          const order = [\"High\", \"Medium\", \"Low\"];\n          authCTX.userState.list.sort(\n            (a, b) => order.indexOf(a.priority) - order.indexOf(b.priority)\n          );\n          return {\n            ...state,\n            type: \"priority\",\n            ascending: !state.ascending,\n          };\n        }\n\n      default:\n        return state;\n    }\n  }\n\n  function sortTaskHandler() {\n    dispatch({ type: \"TASK\" });\n    props.listSorter();\n  }\n  function sortPriorityHandler() {\n    dispatch({ type: \"PRIORITY\" });\n    props.listSorter();\n  }\n\n  return (\n    <Tr className={styles.sort} maxWidth=\"375px\">\n      <Th minWidth=\"120px\">\n        <Button\n          onClick={sortTaskHandler}\n          padding=\"0.2rem\"\n          _hover={{ bg: \"none\" }}\n          _focus={{ boxShadow: \"none\" }}\n        >\n          Task\n          {sortState.type === \"task\" ? (\n            sortState.ascending ? (\n              <ChevronDownIcon />\n            ) : (\n              <ChevronUpIcon />\n            )\n          ) : (\n            \"\"\n          )}\n        </Button>\n      </Th>\n      <Th minWidth=\"110px\" paddingLeft=\"50px\" textAlign=\"center\">\n        <Button\n          onClick={sortPriorityHandler}\n          padding=\"0.2rem\"\n          _hover={{ bg: \"none\" }}\n          _focus={{ boxShadow: \"none\" }}\n        >\n          Priority\n          {sortState.type === \"priority\" ? (\n            sortState.ascending ? (\n              <ChevronDownIcon />\n            ) : (\n              <ChevronUpIcon />\n            )\n          ) : (\n            \"\"\n          )}\n        </Button>\n      </Th>\n    </Tr>\n  );\n}\n\nexport default SortForm;\n","export default __webpack_public_path__ + \"static/media/empty-list.e5855d3c.svg\";","import { Tbody, Tr, Td } from \"@chakra-ui/react\";\n\nimport emptyList_pic from \"../../assets/empty-list.svg\";\n\nimport NewTask from \"../Actions/NewTask\";\n\nimport styles from \"./EmptyList.module.css\";\n\nfunction EmptyList() {\n  return (\n    <Tbody>\n      <Tr>\n        <Td>\n          <div className={styles.container}>\n            <div>\n              <img src={emptyList_pic} alt=\"Empty list\" />\n            </div>\n            <div className={styles.description}>\n              <p>There are no items here!</p>\n              <p>Start ading your tasks</p>\n            </div>\n            <div className={styles.action}>\n              <NewTask />\n            </div>\n          </div>\n        </Td>\n      </Tr>\n    </Tbody>\n  );\n}\nexport default EmptyList;\n","import React, { Fragment, useState, useContext } from \"react\";\nimport { Table, Thead, Tbody } from \"@chakra-ui/react\";\n\nimport TodoItem from \"./TodoItem\";\nimport DoneTask from \"../Actions/DoneTask\";\nimport SortForm from \"../Actions/SortForm\";\nimport EmptyList from \"../../components/Todo/EmptyList\";\nimport { AuthContext } from \"../../util/context/auth-context\";\n\nimport styles from \"./TodoList.module.css\";\n\nfunction TodoList() {\n  const [toggle, setToggle] = useState(false);\n  const authCTX = useContext(AuthContext);\n\n  function listSorter() {\n    setToggle(!toggle);\n  }\n\n  return (\n    <Fragment>\n      <Table size=\"lg\" maxWidth=\"375px\">\n        <Thead maxWidth=\"375px\">\n          <SortForm listSorter={listSorter} />\n        </Thead>\n        {authCTX.userState.list.length === 0 ? (\n          <EmptyList />\n        ) : (\n          <Fragment>\n            <Tbody className={styles.container}>\n              {authCTX.userState.list\n                .filter((task) => task.status === \"UnDone\")\n                .map((todo) => (\n                  <TodoItem\n                    title={todo.title}\n                    id={todo._id}\n                    key={todo._id}\n                    date={todo.createDate}\n                    priority={todo.priority}\n                  />\n                ))}\n            </Tbody>\n            <Tbody className={styles.container2}>\n              {authCTX.userState.list\n                .filter((task) => task.status === \"Done\")\n                .map((todo) => (\n                  <DoneTask\n                    title={todo.title}\n                    id={todo._id}\n                    key={todo._id}\n                    date={todo.createDate}\n                    priority={todo.priority}\n                  />\n                ))}\n            </Tbody>\n          </Fragment>\n        )}\n      </Table>\n    </Fragment>\n  );\n}\n\nexport default TodoList;\n","import { useContext, useEffect } from \"react\";\nimport { Container } from \"@chakra-ui/react\";\n\nimport { AuthContext } from \"../util/context/auth-context\";\nimport { useFetch } from \"../util/Hooks/useFetch\";\nimport MainHeader from \"../components/Header/MainHeader\";\nimport TodoList from \"../components/Todo/TodoList\";\nimport ErrorModal from \"../components/Modals/ErrorModal\";\n\nfunction MainPage() {\n  const authCTX = useContext(AuthContext);\n  const { error, clearError, sendRequest } = useFetch();\n  const { userId, tasks } = authCTX.userState;\n  console.log(\"main\");\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + `/tasks/${userId}`\n        );\n\n        authCTX.setList(responseData.tasks);\n        authCTX.setAvatar(responseData.user.avatar);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchTasks();\n  }, [tasks, sendRequest, userId]);\n\n  return (\n    <Container maxW=\"md\" centerContent padding=\"0\" textAlign=\"center\">\n      {error ? <ErrorModal message={error} clearError={clearError} /> : null}\n      <MainHeader />\n      <TodoList />\n    </Container>\n  );\n}\n\nexport default MainPage;\n"],"sourceRoot":""}