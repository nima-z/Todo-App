{"version":3,"sources":["util/validators.js","components/Input/Input.js","assets/signup.svg","util/Hooks/useForm.js","components/Authentication/SignupForm.js","assets/login.svg","components/Authentication/LoginForm.js","pages/AuthPage.js","App.js","index.js","util/context/auth-context.js","components/Input/Input.module.css","util/Hooks/useFetch.js","components/Modals/ErrorModal.js","components/Authentication/SignupForm.module.css","components/Authentication/LoginForm.module.css"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","touched","Input","props","useState","show","setShow","useReducer","inputState","dispatch","id","placeHolder","errorText","onInput","ChangeInputHandler","event","target","onTouchHandler","useEffect","className","styles","formControl","invalid","size","placeholder","onChange","onBlur","pr","isInvalid","variant","required","width","mr","h","onClick","fontSize","bg","color","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialIsValid","formState","useCallback","SignupForm","navigate","useNavigate","authCTX","useContext","AuthContext","Name","Email","Password","inputHandler","useFetch","isLoading","error","clearError","sendRequest","a","preventDefault","process","JSON","stringify","name","email","password","responseData","setId","user","_id","toString","setName","setTasks","login","userState","userId","console","log","message","ErrorModal","svg","src","signup_pic","alt","form","onSubmit","direction","align","disabled","loadingText","colorScheme","footer","onLogin","LoginForm","tasks","setAvatar","avatar","login_pic","onSignup","AuthPage","isLogin","setIsLogin","changeAuthPage","prev","maxW","centerContent","padding","textAlign","MainPage","React","lazy","App","routes","isLoggedin","path","element","replace","to","fallback","thickness","speed","emptyColor","ReactDOM","render","document","getElementById","createContext","userName","list","logout","setList","initializer","localAuthObject","localStorage","getItem","localAuth","parse","userReducer","AuthProvider","loginHandler","logoutHandler","userIdHandler","userNameHandler","updateTasksHandler","x","updateListHandler","setItem","removeItem","Provider","children","module","exports","setIsLoading","setError","url","method","body","fetch","headers","response","json","ok","Error","isOpen","isCentered","maxWidth"],"mappings":"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","file":"static/js/main.6e660749.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import { useReducer, useState, useEffect } from \"react\";\nimport {\n  Input as InputChakra,\n  InputGroup,\n  InputRightElement,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport { validate } from \"../../util/validators\";\nimport styles from \"./Input.module.css\";\n\nfunction inputReducer(state, action) {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCHED\":\n      return { ...state, touched: true };\n    default:\n      return state;\n  }\n}\n\nfunction Input(props) {\n  const [show, setShow] = useState(false);\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.value || \"\",\n    isValid: props.isValid || false,\n    touched: false,\n  });\n  const { id, type, placeHolder, validators, errorText, onInput } = props;\n\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [onInput, id, value, isValid]);\n\n  function handleClick() {\n    setShow(!show);\n  }\n\n  function ChangeInputHandler(event) {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: validators,\n    });\n  }\n\n  function onTouchHandler() {\n    dispatch({ type: \"TOUCHED\" });\n  }\n  if (id === \"Password\") {\n    return (\n      <div\n        className={`${styles.formControl} ${\n          !inputState.isValid && inputState.touched && styles.invalid\n        }`}\n      >\n        <InputGroup size=\"md\">\n          <InputChakra\n            type={show ? \"text\" : \"password\"}\n            id={id}\n            placeholder={placeHolder}\n            onChange={ChangeInputHandler}\n            onBlur={onTouchHandler}\n            value={inputState.value}\n            pr=\"4.5rem\"\n            isInvalid={!inputState.isValid && inputState.touched}\n            variant=\"filled\"\n            required\n          />\n          <InputRightElement width=\"3rem\" mr=\"0.3rem\">\n            <Button\n              h=\"24px\"\n              size=\"sm\"\n              onClick={handleClick}\n              fontSize=\"11px\"\n              bg=\"#CBD5E0\"\n              color=\"white\"\n            >\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n        {!inputState.isValid && inputState.touched && <p>{errorText}</p>}\n      </div>\n    );\n  }\n  return (\n    <div\n      className={`${styles.formControl} ${\n        !inputState.isValid && inputState.touched && styles.invalid\n      }`}\n    >\n      <InputChakra\n        type={type}\n        id={id}\n        placeholder={placeHolder}\n        onChange={ChangeInputHandler}\n        onBlur={onTouchHandler}\n        value={inputState.value}\n        isInvalid={!inputState.isValid && inputState.touched}\n        variant=\"filled\"\n        required\n      />\n      {!inputState.isValid && inputState.touched && <p>{errorText}</p>}\n    </div>\n  );\n}\n\nexport default Input;\n","export default __webpack_public_path__ + \"static/media/signup.0370f7ea.svg\";","import { useCallback, useReducer } from \"react\";\n\nfunction formReducer(state, action) {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function useForm(initialInputs, initialIsValid) {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialIsValid,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  return [formState, inputHandler];\n}\n","import { Fragment, useContext } from \"react\";\nimport { Flex, Button } from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Input from \"../Input/Input\";\nimport signup_pic from \"../../assets/signup.svg\";\nimport { useForm } from \"../../util/Hooks/useForm\";\nimport { useFetch } from \"../../util/Hooks/useFetch\";\nimport { AuthContext } from \"../../util/context/auth-context\";\nimport ErrorModal from \"../Modals/ErrorModal\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n} from \"../../util/validators\";\n\nimport styles from \"./SignupForm.module.css\";\n\nfunction SignupForm(props) {\n  const navigate = useNavigate();\n  const authCTX = useContext(AuthContext);\n  const [formState, inputHandler] = useForm(\n    {\n      Name: { value: \"\", isValid: false },\n      Email: { value: \"\", isValid: false },\n      Password: { value: \"\", isValid: false },\n    },\n    false\n  );\n  const { isLoading, error, clearError, sendRequest } = useFetch();\n\n  async function submitHandler(event) {\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\n        \"POST\",\n        JSON.stringify({\n          name: formState.inputs.Name.value,\n          email: formState.inputs.Email.value,\n          password: formState.inputs.Password.value,\n        })\n      );\n\n      authCTX.setId(responseData.user._id.toString());\n      authCTX.setName(responseData.user.name);\n      authCTX.setTasks(0);\n      authCTX.login();\n      navigate(`/${authCTX.userState.userId}`);\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n    <Fragment>\n      {error ? <ErrorModal message={error} clearError={clearError} /> : null}\n      <div className={styles.svg}>\n        <img src={signup_pic} alt=\"\" />\n      </div>\n      <form className={styles.form} onSubmit={submitHandler}>\n        <Flex direction=\"column\" align=\"flex-start\">\n          <Input\n            type=\"text\"\n            id=\"Name\"\n            placeHolder=\"Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid name\"\n            onInput={inputHandler}\n          />\n          <Input\n            type=\"email\"\n            id=\"Email\"\n            placeHolder=\"Email\"\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email\"\n            onInput={inputHandler}\n          />\n\n          <Input\n            type=\"password\"\n            id=\"Password\"\n            placeHolder=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Password should be at least 5 characters\"\n            onInput={inputHandler}\n          />\n        </Flex>\n\n        <Button\n          type=\"submit\"\n          disabled={!formState.isValid}\n          isLoading={isLoading}\n          loadingText=\"Submitting\"\n          colorScheme=\"green\"\n        >\n          Sign Up &rarr;\n        </Button>\n        <div className={styles.footer}>\n          <p>\n            Already have an account?\n            <button type=\"button\" onClick={props.onLogin}>\n              Login\n            </button>\n            .\n          </p>\n        </div>\n      </form>\n    </Fragment>\n  );\n}\n\nexport default SignupForm;\n","export default __webpack_public_path__ + \"static/media/login.88e67fad.svg\";","import { Fragment, useContext } from \"react\";\nimport { Flex, Button } from \"@chakra-ui/react\";\nimport { AuthContext } from \"../../util/context/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Input from \"../Input/Input\";\nimport login_pic from \"../../assets/login.svg\";\nimport { useForm } from \"../../util/Hooks/useForm\";\nimport { useFetch } from \"../../util/Hooks/useFetch\";\nimport ErrorModal from \"../Modals/ErrorModal\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n} from \"../../util/validators\";\n\nimport styles from \"./LoginForm.module.css\";\n\nfunction LoginForm(props) {\n  const authCTX = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const [formState, inputHandler] = useForm(\n    {\n      Email: { value: \"\", isValid: false },\n      Password: { value: \"\", isValid: false },\n    },\n    false\n  );\n  const { isLoading, error, clearError, sendRequest } = useFetch();\n\n  async function submitHandler(event) {\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/users/login\",\n        \"POST\",\n        JSON.stringify({\n          email: formState.inputs.Email.value,\n          password: formState.inputs.Password.value,\n        })\n      );\n\n      authCTX.login();\n      authCTX.setId(responseData.user._id.toString());\n      authCTX.setName(responseData.user.name);\n      authCTX.setTasks(responseData.user.tasks.length);\n      authCTX.setAvatar(responseData.user.avatar);\n      navigate(`/${authCTX.userState.userId}`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Fragment>\n      {error ? <ErrorModal message={error} clearError={clearError} /> : null}\n\n      <div className={styles.svg}>\n        <img src={login_pic} alt=\"\" />\n      </div>\n      <form className={styles.form} onSubmit={submitHandler}>\n        <Flex direction=\"column\" align=\"flex-start\">\n          <Input\n            type=\"email\"\n            id=\"Email\"\n            placeHolder=\"Email\"\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email\"\n            onInput={inputHandler}\n          />\n          <Input\n            type=\"password\"\n            id=\"Password\"\n            placeHolder=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Password should be at least 5 characters\"\n            onInput={inputHandler}\n          />\n        </Flex>\n        <Button\n          type=\"submit\"\n          disabled={!formState.isValid}\n          isLoading={isLoading}\n          loadingText=\"Logging in\"\n          colorScheme=\"green\"\n        >\n          Login &rarr;\n        </Button>\n        <div className={styles.footer}>\n          <p>\n            Not a member?\n            <button onClick={props.onSignup}>Sign up</button>.\n          </p>\n        </div>\n      </form>\n    </Fragment>\n  );\n}\n\nexport default LoginForm;\n","import { useState, Fragment } from \"react\";\nimport { Container } from \"@chakra-ui/react\";\n\nimport SignupForm from \"../components/Authentication/SignupForm\";\nimport LoginForm from \"../components/Authentication/LoginForm\";\n\nfunction AuthPage() {\n  const [isLogin, setIsLogin] = useState(false);\n\n  function changeAuthPage() {\n    setIsLogin((prev) => !prev);\n  }\n\n  return (\n    <Fragment>\n      <Container maxW=\"sm\" centerContent padding=\"0\" textAlign=\"center\">\n        {!isLogin ? (\n          <SignupForm onLogin={changeAuthPage} />\n        ) : (\n          <LoginForm onSignup={changeAuthPage} />\n        )}\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default AuthPage;\n","import React, { useContext, Suspense } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { Spinner } from \"@chakra-ui/react\";\n\nimport AuthPage from \"./pages/AuthPage\";\n// import MainPage from \"./pages/MainPage\";\nimport { AuthContext } from \"./util/context/auth-context\";\n\nimport \"./App.css\";\n\nconst MainPage = React.lazy(() => import(\"./pages/MainPage\"));\n\nfunction App() {\n  const authCTX = useContext(AuthContext);\n\n  let routes;\n\n  if (authCTX.userState.isLoggedin) {\n    routes = (\n      <Routes>\n        <Route path=\"/:uid/\" element={<MainPage />} />\n        <Route path=\"*\" element={<Navigate replace to=\"/:uid\" />} />\n      </Routes>\n    );\n  } else {\n    routes = (\n      <Routes>\n        <Route path=\"/auth\" element={<AuthPage />} />\n        <Route path=\"*\" element={<Navigate replace to=\"/auth\" />} />\n      </Routes>\n    );\n  }\n  return (\n    <Suspense\n      fallback={\n        <div className=\"center\">\n          <Spinner\n            thickness=\"4px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.200\"\n            color=\"blue.500\"\n            size=\"xl\"\n          />\n        </div>\n      }\n    >\n      {routes}\n    </Suspense>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport { AuthProvider } from \"./util/context/auth-context\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <Router>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </Router>\n  </ChakraProvider>,\n\n  document.getElementById(\"root\")\n);\n","import { createContext, useCallback, useEffect, useReducer } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedin: false,\n  userId: null,\n  userName: null,\n  tasks: 0,\n  list: [],\n  avatar: \"\",\n  login: () => {},\n  logout: () => {},\n  setId: () => {},\n  setTasks: () => {},\n  setList: () => {},\n  setAvatar: () => {},\n});\n\nfunction initializer() {\n  const localAuthObject = localStorage.getItem(\"auth\");\n  if (localAuthObject) {\n    const localAuth = JSON.parse(localAuthObject);\n    if (localAuth && localAuth.isLoggedin) return localAuth;\n    else {\n      return { userId: null, userName: null, isLoggedin: false, tasks: 0 };\n    }\n  } else {\n    return { userId: null, userName: null, isLoggedin: false, tasks: 0 };\n  }\n}\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case \"NAME\":\n      return { ...state, userName: action.val };\n    case \"ID\":\n      return { ...state, userId: action.val };\n    case \"LOGIN\":\n      return { ...state, isLoggedin: true };\n    case \"LOGOUT\":\n      return { ...state, isLoggedin: false };\n    case \"TASK\":\n      return { ...state, tasks: state.tasks + action.val };\n    case \"LIST\":\n      if (action.val.length > 0 || action.val.length === 0) {\n        return { ...state, list: action.val };\n      } else {\n        return { ...state, list: [...state.list, action.val] };\n      }\n    case \"AVATAR\":\n      return { ...state, avatar: action.val };\n    default:\n      return state;\n  }\n};\nexport function AuthProvider(props) {\n  // const [isLoggedin, setIsLoggedin] = useState(initializer());\n  const [userState, dispatch] = useReducer(userReducer, {\n    userId: initializer().userId,\n    userName: initializer().userName,\n    isLoggedin: initializer().isLoggedin,\n    tasks: initializer().tasks,\n    list: [],\n    avatar: \"\",\n  });\n  const loginHandler = useCallback(() => {\n    dispatch({ type: \"LOGIN\" });\n  }, []);\n\n  const logoutHandler = useCallback(() => {\n    dispatch({ type: \"LOGOUT\" });\n  }, []);\n\n  const userIdHandler = useCallback((userId) => {\n    dispatch({ type: \"ID\", val: userId });\n  }, []);\n\n  const userNameHandler = useCallback((userName) => {\n    dispatch({ type: \"NAME\", val: userName });\n  }, []);\n  const updateTasksHandler = useCallback((x) => {\n    dispatch({ type: \"TASK\", val: x });\n  }, []);\n  const updateListHandler = useCallback((x) => {\n    dispatch({ type: \"LIST\", val: x });\n  }, []);\n  const updateAvatar = (x) => {\n    dispatch({ type: \"AVATAR\", val: x });\n  };\n\n  const { isLoggedin } = userState;\n\n  useEffect(() => {\n    if (isLoggedin) localStorage.setItem(\"auth\", JSON.stringify(userState));\n    else localStorage.removeItem(\"auth\");\n  }, [isLoggedin, userState]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        login: loginHandler,\n        logout: logoutHandler,\n        setId: userIdHandler,\n        setName: userNameHandler,\n        setTasks: updateTasksHandler,\n        setList: updateListHandler,\n        setAvatar: updateAvatar,\n        userState,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Input_formControl__1rF8p\",\"invalid\":\"Input_invalid__2u9yB\"};","import { useState, useCallback } from \"react\";\n\nexport function useFetch() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const sendRequest = useCallback(async (url, method = \"GET\", body = null) => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n\n      setIsLoading(false);\n      return responseData;\n    } catch (err) {\n      setIsLoading(false);\n      setError(err.message);\n      throw err;\n    }\n  }, []);\n\n  function clearError() {\n    setError(null);\n  }\n\n  return { isLoading, error, clearError, sendRequest };\n}\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  Button,\n} from \"@chakra-ui/react\";\n\nfunction ErrorModal(props) {\n  return (\n    <>\n      <Modal isOpen isCentered>\n        <ModalOverlay />\n        <ModalContent maxWidth=\"350px\">\n          <ModalHeader>Error</ModalHeader>\n          <ModalBody>{props.message}</ModalBody>\n          <ModalFooter>\n            <Button onClick={props.clearError}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default ErrorModal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"SignupForm_svg__3JPgJ\",\"form\":\"SignupForm_form__H9GKT\",\"footer\":\"SignupForm_footer__3J97k\",\"emailExist\":\"SignupForm_emailExist__3a-uI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"LoginForm_svg__JHQbm\",\"form\":\"LoginForm_form__3jmxq\",\"footer\":\"LoginForm_footer__3fL2l\"};"],"sourceRoot":""}